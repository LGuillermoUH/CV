---
    interface Props {
        href: string;
        Icon: any;
        content: string;
        type?: boolean;
        id?: string
    }
    const {href, Icon, content, type = false, id = "actionButton"} = Astro.props as Props
---
{type ? (
    <button
      id={id}
      type="button"
      class="text-t-color-4 flex border p-1 rounded-xl w-60"
    >
      <Icon class="text-t-color-4 to-t-color-4 ml-2" />
      <p class="pl-2">{content}</p>
    </button>
  ) : (
  <a 
    href={href} 
    target="_blank"
    role="link"
    class="text-t-color-4 flex border p-1 rounded-xl w-60"
    >
        <Icon class="text-t-color-4 to-t-color-4 ml-2"/>
        <p class="pl-2">{content}</p>

    </a>
  )}


<script define:vars={{ href, type, id }}>
  if (type) {
    const button = document.getElementById(id);

    button?.addEventListener('click', async () => {
      try {
        // Copiamos texto al portapapeles
        await navigator.clipboard.writeText(href);

        // MOSTRAMOS EL TOAST DIRECTO (sin buscar "#toast")
        const event = new CustomEvent('show-toast', {
          detail: {
            message: '¡Texto copiado con éxito!',
            duration: 3000,
          },
        });
        document.dispatchEvent(event);

      } catch (error) {
        console.error("Error al copiar el texto: ", error);
      }
    });
  }
</script>

